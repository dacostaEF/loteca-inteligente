/**
 * FUN√á√ïES DE RENDERIZA√á√ÉO VISUAL
 * Migradas do loteca.html para melhor organiza√ß√£o
 * 
 * ‚ö†Ô∏è ATEN√á√ÉO: Estas fun√ß√µes s√£o puramente visuais e n√£o afetam funcionalidades cr√≠ticas
 */

// FUN√á√ÉO AUXILIAR PARA DETERMINAR ZONA
function determinarZona(posicao, zona) {
    if (zona) {
        // Converter zona do backend para classe CSS
        if (zona === 'Libertadores') return 'libertadores';
        if (zona === 'Pr√©-Libertadores') return 'pre-libertadores';
        if (zona === 'Sul-Americana') return 'sul-americana';
        if (zona === 'Zona de Rebaixamento') return 'rebaixamento';
        if (zona === 'Meio de tabela') return 'meio-tabela';
        return zona.toLowerCase().replace(/\s+/g, '-');
    }
    
    // Determinar zona baseada na posi√ß√£o (baseado na tabela do jornal esportivo)
    if (posicao <= 4) return 'libertadores';      // 1¬∫ ao 4¬∫ (azul)
    if (posicao <= 6) return 'pre-libertadores';   // 5¬∫ ao 6¬∫ (azul claro)
    if (posicao <= 12) return 'sul-americana';    // 7¬∫ ao 12¬∫ (verde)
    if (posicao >= 17) return 'rebaixamento';     // 17¬∫ ao 20¬∫ (vermelho)
    return 'meio-tabela'; // 13¬∫ ao 16¬∫ (preto)
}

// RENDERIZAR TABELA DE CLASSIFICA√á√ÉO (vers√£o simples)
function renderTabelaClassificacao(dados) {
    const header = `
        <table class="brasileirao-table">
            <thead>
                <tr>
                    <th>CLASSIFICA√á√ÉO</th>
                    <th>P</th>
                    <th>J</th>
                    <th>V</th>
                    <th>E</th>
                    <th>D</th>
                    <th>GP</th>
                    <th>GC</th>
                    <th>SG</th>
                    <th>%</th>
                    <th>√öLTIMOS</th>
                </tr>
            </thead>
            <tbody>
    `;

    const rows = dados.map(time => {
        // Se os dados j√° v√™m com bolas coloridas, usar diretamente
        let ultimosJogos;
        if (time.ultimos && time.ultimos.includes('üü¢')) {
            // Dados j√° convertidos com bolas coloridas
            ultimosJogos = time.ultimos;
        } else {
            // Converter V-D-E para bolas coloridas
            ultimosJogos = (time.ultimos || '-----').replace(/V/g, 'üü¢').replace(/D/g, 'üî¥').replace(/E/g, 'üü°');
        }

        // Determinar √≠cone de varia√ß√£o
        let variacaoIcon = '';
        if (time.variacao === 'subiu') {
            variacaoIcon = '‚Üë';
        } else if (time.variacao === 'desceu') {
            variacaoIcon = '‚Üì';
        } else {
            variacaoIcon = '‚ñ†';
        }

        return `
            <tr class="${determinarZona(time.pos, time.zona)}">
                <td>
                    <span class="team-position">${time.pos}</span>
                    <span class="variacao-icon">${variacaoIcon}</span>
                    <span class="team-name">${time.time}</span>
                </td>
                <td><strong>${time.p}</strong></td>
                <td>${time.j}</td>
                <td>${time.v}</td>
                <td>${time.e}</td>
                <td>${time.d}</td>
                <td>${time.gp}</td>
                <td>${time.gc}</td>
                <td>${time.sg !== undefined && time.sg !== null ? (time.sg > 0 ? '+' + time.sg : time.sg) : '0'}</td>
                <td>${time.aproveitamento}</td>
                <td>
                    <div class="ultimos-jogos">
                        ${ultimosJogos}
                    </div>
                </td>
            </tr>
        `;
    }).join('');

    const footer = `
            </tbody>
        </table>
        <div class="table-footer">
            <div class="zones-info">
                <h4>üèÜ Zonas de Classifica√ß√£o</h4>
                <div class="zones-grid">
                    <div class="zone-item libertadores">
                        <div class="zone-bar"></div>
                        <div class="zone-text">
                            <strong>Libertadores (1¬∫-4¬∫)</strong>
                            <span>Classifica√ß√£o direta para a Copa Libertadores</span>
                        </div>
                    </div>
                    <div class="zone-item pre-libertadores">
                        <div class="zone-bar"></div>
                        <div class="zone-text">
                            <strong>Pr√©-Libertadores (5¬∫-6¬∫)</strong>
                            <span>Pr√©-classifica√ß√£o para a Copa Libertadores</span>
                        </div>
                    </div>
                    <div class="zone-item sul-americana">
                        <div class="zone-bar"></div>
                        <div class="zone-text">
                            <strong>Sul-Americana (7¬∫-12¬∫)</strong>
                            <span>Classifica√ß√£o para a Copa Sul-Americana</span>
                        </div>
                    </div>
                    <div class="zone-item meio-tabela">
                        <div class="zone-bar"></div>
                        <div class="zone-text">
                            <strong>Meio de Tabela (13¬∫-16¬∫)</strong>
                            <span>Sem classifica√ß√£o para competi√ß√µes internacionais</span>
                        </div>
                    </div>
                    <div class="zone-item rebaixamento">
                        <div class="zone-bar"></div>
                        <div class="zone-text">
                            <strong>Zona de Rebaixamento (17¬∫-20¬∫)</strong>
                            <span>Rebaixamento para a S√©rie B</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `;

    return header + rows + footer;
}

// RENDERIZAR LINHA DE CLASSIFICA√á√ÉO (vers√£o edit√°vel)
function renderLinhaClassificacao(time, isEditable = false) {
    const zona = determinarZona(time.posicao, time.zona);
    const ultimos = time.ultimos_jogos || 'VVVVV';
    
    return `
        <tr class="team-row zona-${zona}" data-team-id="${time.id}" data-position="${time.posicao}">
            <td class="position">${time.posicao}</td>
            <td class="team-name">
                <div class="team-info">
                    <span class="team-short">${time.time}</span>
                </div>
            </td>
            <td class="points ${isEditable ? 'editable' : ''}" ${isEditable ? `contenteditable="true" data-field="pontos" data-id="${time.id}"` : ''}>${time.pontos}</td>
            <td class="games ${isEditable ? 'editable' : ''}" ${isEditable ? `contenteditable="true" data-field="jogos" data-id="${time.id}"` : ''}>${time.jogos}</td>
            <td class="wins ${isEditable ? 'editable' : ''}" ${isEditable ? `contenteditable="true" data-field="vitorias" data-id="${time.id}"` : ''}>${time.vitorias}</td>
            <td class="draws ${isEditable ? 'editable' : ''}" ${isEditable ? `contenteditable="true" data-field="empates" data-id="${time.id}"` : ''}>${time.empates}</td>
            <td class="losses ${isEditable ? 'editable' : ''}" ${isEditable ? `contenteditable="true" data-field="derrotas" data-id="${time.id}"` : ''}>${time.derrotas}</td>
            <td class="goals-for ${isEditable ? 'editable' : ''}" ${isEditable ? `contenteditable="true" data-field="gols_pro" data-id="${time.id}"` : ''}>${time.gols_pro}</td>
            <td class="goals-against ${isEditable ? 'editable' : ''}" ${isEditable ? `contenteditable="true" data-field="gols_contra" data-id="${time.id}"` : ''}>${time.gols_contra}</td>
            <td class="goal-diff ${time.saldo_gols >= 0 ? 'positive' : 'negative'}">${time.saldo_gols >= 0 ? '+' : ''}${time.saldo_gols}</td>
            <td class="percentage">${time.aproveitamento}%</td>
            <td class="recent-games">
                <div class="games-indicators">
                    ${ultimos.split('').map(resultado => `<span class="game-result ${resultado.toLowerCase()}">${resultado}</span>`).join('')}
                </div>
            </td>
        </tr>
    `;
}

console.log('‚úÖ [RENDERING] Fun√ß√µes de renderiza√ß√£o carregadas com sucesso!');

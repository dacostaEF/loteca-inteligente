/**
 * TESTE DIRETO DE BUSCA NO JSON
 * Cole no console (F12) para diagnosticar
 */

console.log('üîç ===== TESTE DE BUSCA DIRETA NO JSON =====\n');

// 1. Verificar se o JSON est√° carregado
if (!forcaElencoData) {
    console.error('‚ùå forcaElencoData N√ÉO carregado!');
} else {
    console.log('‚úÖ forcaElencoData carregado!');
    console.log('üìã Clubes dispon√≠veis:', Object.keys(forcaElencoData.clubes));
    console.log('');
}

// 2. Testar busca direta pelos 7 clubes problem√°ticos
const clubesProblema = [
    { nome: 'Athletico-PR', chaveEsperada: 'athletico_pr' },
    { nome: 'Ava√≠', chaveEsperada: 'avai' },
    { nome: 'Athletic-MG', chaveEsperada: 'athletic_mg' },
    { nome: 'Remo', chaveEsperada: 'remo' },
    { nome: 'Chapecoense', chaveEsperada: 'chapecoense' },
    { nome: 'Oper√°rio-PR', chaveEsperada: 'operario_pr' },
    { nome: 'Vila Nova', chaveEsperada: 'vila_nova' }
];

console.log('üß™ TESTANDO BUSCA DIRETA:\n');

clubesProblema.forEach(clube => {
    console.log(`üéØ ${clube.nome}`);
    
    // Testar busca direta no JSON
    const encontradoDireto = forcaElencoData.clubes[clube.chaveEsperada];
    console.log(`   Busca direta [${clube.chaveEsperada}]: ${encontradoDireto ? '‚úÖ ENCONTRADO' : '‚ùå N√ÉO ENCONTRADO'}`);
    
    if (encontradoDireto) {
        console.log(`   ‚úÖ Dados: ${encontradoDireto.nome_oficial} - ‚Ç¨${encontradoDireto.valor_elenco_euros}M`);
    }
    
    // Testar atrav√©s da fun√ß√£o verificarForcaElenco
    const resultado = verificarForcaElenco(clube.nome, clube.nome);
    console.log(`   Fun√ß√£o verificarForcaElenco: ${resultado.casa ? '‚úÖ ENCONTRADO' : '‚ùå N√ÉO ENCONTRADO'}`);
    
    if (!resultado.casa) {
        // Debug do mapeamento
        const nomeLower = clube.nome.toLowerCase().trim();
        console.log(`   üîç Nome lowercase: "${nomeLower}"`);
        
        // Tentar ver se existe no mapeamento
        console.log(`   üîç Testando mapeamento...`);
        
        // Simular o que a fun√ß√£o faz
        const mapeamentoTeste = {
            'athletico-pr': 'athletico_pr',
            'ava√≠': 'avai',
            'athletic-mg': 'athletic_mg',
            'remo': 'remo',
            'chapecoense': 'chapecoense',
            'oper√°rio-pr': 'operario_pr',
            'vila nova': 'vila_nova'
        };
        
        const chave = mapeamentoTeste[nomeLower];
        console.log(`   üîç Chave do mapeamento teste: "${chave || 'N√ÉO ENCONTRADO'}"`);
    }
    
    console.log('');
});

console.log('üîç ===== FIM DO TESTE =====');

